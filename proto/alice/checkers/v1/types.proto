syntax = "proto3";
package alice.checkers.v1;

option go_package = "github.com/alice/checkers";

import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "amino/amino.proto";

// Params defines the parameters of the module.
message Params { option (amino.name) = "alice/checkers/Params"; }

// Counter defines a counter object.
// It is used only for genesis purposes. Collections does not need to use it.

message Counter {
  option (amino.name) = "alice/checkers/Counter";

  // count defines the count of the counter.
  uint64 count = 1;

  // address defines the address that is associated with the count.
  string address = 2 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
}

// GenesisState is the state that must be provided at genesis.
message GenesisState {
  // counter defines the counter object.
  // repeated Counter counters = 3
  //    [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];  

  // params defines all the parameters of the module.
  //  Params params = 1
  //      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];

  Params params = 1 [ (gogoproto.nullable) = false ];

  repeated IndexedStoredGame IndexedStoredGameList = 2 [(gogoproto.nullable) = false];

}


message StoredGame {
    string board = 1;
    string turn = 2;
    string black = 3 [(cosmos_proto.scalar) = "cosmos.AddressString"];
    string red = 4 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

message IndexedStoredGame {
   string index = 1;
   StoredGame storedGame = 2 [(gogoproto.nullable) = false];
}
